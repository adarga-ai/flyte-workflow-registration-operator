apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "operator-helm-chart.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: project
    app.kubernetes.io/part-of: project
    control-plane: controller-manager
  {{- include "operator-helm-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "operator-helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "operator-helm-chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - command:
        - /manager
        env:
        - name: AWS_REGION
          value: {{ quote .Values.controllerManager.manager.env.awsRegion }}
        - name: LOG_LEVEL
          value: {{ quote .Values.controllerManager.manager.env.logLevel }}
        - name: DOWNLOADER_STRATEGY
          value: {{ quote .Values.controllerManager.manager.env.downloaderStrategy }}
        - name: OCI_REGISTRY
          value: {{ quote .Values.controllerManager.manager.env.ociRegistry }}
        - name: OCI_AUTH_STRATEGY
          value: {{ quote .Values.controllerManager.manager.env.ociAuthStrategy }}
        - name: OCI_USERNAME
          value: {{ quote .Values.controllerManager.manager.env.ociUsername }}
        - name: OCI_PASSWORD
          value: {{ quote .Values.controllerManager.manager.env.ociPassword }}
        - name: JFROG_ARTIFACTORY_URL
          value: {{ quote .Values.controllerManager.manager.env.jFrogArtifactoryUrl }}
        - name: JFROG_USER
          value: {{ quote .Values.controllerManager.manager.env.jFrogUser }}
        - name: JFROG_PASSWORD
          value: {{ quote .Values.controllerManager.manager.env.jFrogPassword }}
        - name: FLYTE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: clientId
              name: flyte-credentials
        - name: FLYTE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: clientSecret
              name: flyte-credentials
        - name: FLYTE_ADMIN_ENDPOINT
          value: {{ quote .Values.controllerManager.manager.env.flyteAdminEndpoint }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "operator-helm-chart.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10